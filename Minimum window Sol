class Solution(object):
    def minWindow(self, s, t):
        # Count frequency of characters in t
        c = Counter(t)
        overall = len(c)  # Tracks how many unique characters in t we still need to satisfy
        r = 0  # Right pointer
        l = 0  # Left pointer
        res = ""  # Result string to hold the minimum window

        # Start moving the right pointer across the string s
        while r < len(s):
            if s[r] in c:
                c[s[r]] -= 1
                if c[s[r]] == 0:
                    overall -= 1

            # Now try to contract the window from the left side if all characters are satisfied
            while overall == 0:
                # Update result if this window is smaller
                if not res:
                    res = s[l: r+1]
                elif r - l + 1 < len(res):
                    res = s[l: r+1]

                # Move left pointer to reduce the window
                if s[l] in c:
                    c[s[l]] += 1
                    if c[s[l]] > 0:
                        overall += 1
                l += 1

            # Move right pointer forward
            r += 1

        return res
